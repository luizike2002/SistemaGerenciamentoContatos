@using ControleDeContatos.Enums
@model AlterarSenhaModel


@{
	ViewData["Title"] = "Alterar senha do usuário";
}

@if (TempData["MensagemSucesso"] != null)
{
	<div class="alert alert-success" role="alert">
		<button type="button" class="btn btn-sm close-alert" arial-label="Close">X</button>
		@TempData["MensagemSucesso"]
	</div>
}
@if (TempData["MensagemErro"] != null)
{
	<div class="alert alert-danger" role="alert">
		<button type="button" class="btn btn-sm close-alert" arial-label="Close">X</button>
		@TempData["MensagemErro"]
	</div>
}
<div class="text-center">
	<h1 class="display-4">Alterar Senha</h1>
	<br />
	<br />
	<form asp-controller="AlterarSenha" asp-action="Alterar" method="post">
		<div class="form-group text-start">
			<label for="senhaAtual" class="form-label">Senha Atual</label>
			<input type="password" asp-for="SenhaAtual" class="form-control" placeholder="Digite a senha atual do usuario"> 
			@Html.ValidationMessageFor(x => x.SenhaAtual)
		</div>
		<div class="form-group text-start">
			<label for="novaSenha" class="form-label">Nova Senha</label>
			<input type="password" asp-for="NovaSenha" class="form-control" placeholder="Digite a nova senha do usuario">
			@Html.ValidationMessageFor(x => x.NovaSenha)
		</div>
		<div class="form-group text-start">
			<label for="confirmarNovaSenha" class="form-label">Confirmar Nova Senha</label>
			<input type="password" asp-for="ConfirmarNovaSenha" class="form-control" placeholder="Confirme a nova senha do usuario">
			@Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
		</div>
		<br />
		<button type="submit" class="btn btn-success">Alterar</button>
		<div>
			
		<a class="btn btn-primary" asp-controller="Home" asp-action="Index">Voltar</a>
		</div>
	</form>
	
</div>

